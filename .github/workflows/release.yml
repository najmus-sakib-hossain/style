name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: style.exe
            asset_name: style-windows-x64.exe
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   artifact_name: style
          #   asset_name: style-linux-x64
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   artifact_name: style
          #   asset_name: style-macos-x64
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          #   artifact_name: style
          #   asset_name: style-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      # - name: Strip binary (Linux and macOS)
      #   if: matrix.os != 'windows-latest'
      #   run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  sign-windows:
    name: Sign Windows Binary
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: style-windows-x64.exe
          path: ./artifacts

      - name: Sign Windows executable with SignPath
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: signpath/github-action-submit-signing-request@v1
        with:
          api-token: ${{ secrets.SIGNPATH_API_TOKEN }}
          organization-id: ${{ secrets.SIGNPATH_ORGANIZATION_ID }}
          project-slug: 'your-project-name'
          signing-policy-slug: 'release-signing'
          artifact-configuration-slug: 'default'
          input-artifact-path: ./artifacts/style.exe
          output-artifact-path: ./signed/style-windows-x64.exe
          wait-for-completion: true

      - name: Upload signed Windows binary
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: style-windows-x64-signed
          path: ./signed/style-windows-x64.exe

  create-release:
    name: Create Release
    needs: [build, sign-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create checksums
        run: |
          cd artifacts/style-windows-x64-signed
          sha256sum style-windows-x64.exe > style-windows-x64.exe.sha256

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/style-windows-x64-signed/style-windows-x64.exe
            artifacts/style-windows-x64-signed/style-windows-x64.exe.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
