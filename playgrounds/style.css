/*
  ████████   ██             ██
 ██░░░░░░   ░██    ██   ██ ░██
░██        ██████ ░░██ ██  ░██  █████
░█████████░░░██░   ░░███   ░██ ██░░░██
░░░░░░░░██  ░██     ░██    ░██░███████
       ░██  ░██     ██     ░██░██░░░░
 ████████   ░░██   ██      ███░░██████
░░░░░░░░     ░░   ░░      ░░░  ░░░░░░
Dx Style v0.0.1 | MIT License | https://dx.com
*/
@layer theme, components, base, properties, utilities;

@layer theme {
  :root {
    --color-pink-500: oklch(65.6% .241 354.308);
  }

  .dark {
    --color-pink-500: oklch(65.6% .241 354.308);
  }
}

@layer components {
  
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }

  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: #0000;
    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentcolor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer properties {
  @property --gradient-from-position {
    syntax: "<percentage>"; inherits: false; initial-value: 0%;
  }

  @property --bottom {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --float {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --outline-color {
    syntax: "<color>"; inherits: true; initial-value: currentColor;
  }

  @property --scroll-snap-type {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --mask-size {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --scroll-padding-left {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --backdrop-contrast {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --top {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --flex-shrink {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --text-decoration-skip-ink {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --scroll-margin-left {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --user-select {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --flex {
    syntax: "*"; inherits: false; initial-value: 0 1 auto;
  }

  @property --gradient-via {
    syntax: "<color>"; inherits: false; initial-value: transparent;
  }

  @property --aspect-h {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --pan-y {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --aspect-w {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --contrast {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --hue-rotate {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --background-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --inset-block {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --resize {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --ring-offset-width {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --text-shadow-lg {
    syntax: "<shadow>"; inherits: false; initial-value: 0 1px 2px #0000001a, 0 3px 2px #0000001a, 0 4px 8px #0000001a;
  }

  @property --backdrop-blur {
    syntax: "<length>"; inherits: false; initial-value: 0;
  }

  @property --mask-mode {
    syntax: "*"; inherits: false; initial-value: match-source;
  }

  @property --accent-color {
    syntax: "<color>"; inherits: true; initial-value: auto;
  }

  @property --rotate {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --brightness {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --background-blend-mode {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --gradient-via-position {
    syntax: "<percentage>"; inherits: false; initial-value: 50%;
  }

  @property --gradient-to {
    syntax: "<color>"; inherits: false; initial-value: transparent;
  }

  @property --pinch-zoom {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --gradient-from {
    syntax: "<color>"; inherits: false; initial-value: transparent;
  }

  @property --container-padding-right {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --grid-row {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --scroll-margin-right {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --table-layout {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --blur {
    syntax: "<length>"; inherits: false; initial-value: 0;
  }

  @property --saturate {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --list-style-position {
    syntax: "*"; inherits: true; initial-value: outside;
  }

  @property --transition-delay {
    syntax: "<time>"; inherits: false; initial-value: 0s;
  }

  @property --clip-path {
    syntax: "<geometry-box>"; inherits: false; initial-value: none;
  }

  @property --scroll-margin {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --invert {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --scroll-behavior {
    syntax: "*"; inherits: true; initial-value: auto;
  }

  @property --transition-duration {
    syntax: "<time>"; inherits: false; initial-value: 0s;
  }

  @property --cursor {
    syntax: "*"; inherits: true; initial-value: auto;
  }

  @property --dynamic-opacity {
    syntax: "<percentage>"; inherits: false; initial-value: 100%;
  }

  @property --bg-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --object-fit {
    syntax: "*"; inherits: false; initial-value: fill;
  }

  @property --scroll-padding-bottom {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --border-collapse {
    syntax: "*"; inherits: true; initial-value: separate;
  }

  @property --ring-offset-shadow {
    syntax: "<shadow>"; inherits: false; initial-value: 0 0 #0000;
  }

  @property --overflow {
    syntax: "*"; inherits: false; initial-value: visible;
  }

  @property --text-shadow-2xs {
    syntax: "<shadow>"; inherits: false; initial-value: 0 1px 0 #00000026;
  }

  @property --backdrop-grayscale {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --scroll-margin-top {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --scroll-padding-top {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --gradient-via-colors {
    syntax: "*"; inherits: false;
  }

  @property --ordinal {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --transition-property {
    syntax: "*"; inherits: false; initial-value: all;
  }

  @property --mask-composite {
    syntax: "*"; inherits: false; initial-value: intersect;
  }

  @property --brand-accent {
    syntax: "<color>"; inherits: false; initial-value: #0000;
  }

  @property --grayscale {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --mask-clip {
    syntax: "*"; inherits: false; initial-value: border-box;
  }

  @property --mix-blend-mode {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --slashed-zero {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --translate-y {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --writing-mode {
    syntax: "*"; inherits: true; initial-value: horizontal-tb;
  }

  @property --underline-offset {
    syntax: "<length>"; inherits: false; initial-value: auto;
  }

  @property --placeholder-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --break-before {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --inset {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --z-index {
    syntax: "<integer>"; inherits: false; initial-value: 0;
  }

  @property --order {
    syntax: "<integer>"; inherits: false; initial-value: 0;
  }

  @property --gradient-to-color {
    syntax: "<color>"; inherits: false; initial-value: transparent;
  }

  @property --break-inside {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --scroll-padding-right {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --line-clamp {
    syntax: "<integer>"; inherits: false; initial-value: none;
  }

  @property --scroll-padding-inline {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --border-spacing-x {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --scroll-snap-stop {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --place-content {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --border-right-color {
    syntax: "<color>"; inherits: false; initial-value: currentColor;
  }

  @property --grid-column {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --scroll-snap-strictness {
    syntax: "*"; inherits: false; initial-value: proximity;
  }

  @property --hyphens {
    syntax: "*"; inherits: true; initial-value: manual;
  }

  @property --numeric-fraction {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --scroll-padding-block {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --transition-timing-function {
    syntax: "<timing-function>"; inherits: false; initial-value: ease;
  }

  @property --border-top-color {
    syntax: "<color>"; inherits: false; initial-value: currentColor;
  }

  @property --filter {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --flex-basis {
    syntax: "<flex-basis>"; inherits: false; initial-value: auto;
  }

  @property --gradient-from-color {
    syntax: "<color>"; inherits: false; initial-value: transparent;
  }

  @property --outline-offset {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --overscroll {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --text-orientation {
    syntax: "*"; inherits: true; initial-value: mixed;
  }

  @property --text-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --text-shadow {
    syntax: "<shadow>"; inherits: false; initial-value: 0 0 #0000;
  }

  @property --unicode-bidi {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --mask-origin {
    syntax: "*"; inherits: false; initial-value: border-box;
  }

  @property --text-wrap {
    syntax: "*"; inherits: true; initial-value: wrap;
  }

  @property --appearance {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --border-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --border-color {
    syntax: "<color>"; inherits: false; initial-value: currentColor;
  }

  @property --container-padding-left {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --gradient-to-position {
    syntax: "<percentage>"; inherits: false; initial-value: 100%;
  }

  @property --break-after {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --scale {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --text-decoration-thickness {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --flex-grow {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --pan-x {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --box-shadow {
    syntax: "<shadow>"; inherits: false; initial-value: none;
  }

  @property --place-items {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --text-shadow-xs {
    syntax: "<shadow>"; inherits: false; initial-value: 0 1px 1px #0003;
  }

  @property --will-change {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --isolation {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --left {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --numeric-spacing {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --place-self {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --scroll-margin-inline {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --ring-shadow {
    syntax: "<shadow>"; inherits: false; initial-value: 0 0 #0000;
  }

  @property --position {
    syntax: "*"; inherits: false; initial-value: static;
  }

  @property --scroll-snap-align {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --backdrop-hue-rotate {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --shadow-color {
    syntax: "<color>"; inherits: false; initial-value: #000;
  }

  @property --border-spacing-y {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --forced-colors {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --visibility {
    syntax: "*"; inherits: false; initial-value: visible;
  }

  @property --backdrop-filter {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --overflow-x {
    syntax: "*"; inherits: false; initial-value: visible;
  }

  @property --shadow-colored {
    syntax: "*"; inherits: false;
  }

  @property --stroke-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --divide-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --perspective {
    syntax: "<length>"; inherits: false; initial-value: 0;
  }

  @property --drop-shadow {
    syntax: "<shadow>"; inherits: false; initial-value: 0 0 #0000;
  }

  @property --text-shadow-sm {
    syntax: "<shadow>"; inherits: false; initial-value: 0 1px 0 #00000013, 0 1px 1px #00000013, 0 2px 2px #00000013;
  }

  @property --pointer-events {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --backdrop-sepia {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --ring-offset-color {
    syntax: "<color>"; inherits: false; initial-value: #fff;
  }

  @property --shadow {
    syntax: "<shadow>"; inherits: false; initial-value: 0 0 #0000;
  }

  @property --mask-repeat {
    syntax: "<repeat-style>"; inherits: false; initial-value: no-repeat;
  }

  @property --backdrop-saturate {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --spacing-scale {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --content {
    syntax: "*"; inherits: false; initial-value: "";
  }

  @property --numeric-figures {
    syntax: "*"; inherits: false; initial-value: normal;
  }

  @property --caret-color {
    syntax: "<color>"; inherits: true; initial-value: auto;
  }

  @property --ring-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --skew-y {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --text-shadow-md {
    syntax: "<shadow>"; inherits: false; initial-value: 0 1px 1px #0000001a, 0 1px 2px #0000001a, 0 2px 4px #0000001a;
  }

  @property --scroll-margin-bottom {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --translate-x {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --clear {
    syntax: "*"; inherits: false; initial-value: none;
  }

  @property --vertical-align {
    syntax: "<vertical-align>"; inherits: false; initial-value: baseline;
  }

  @property --right {
    syntax: "<length-percentage>"; inherits: false; initial-value: auto;
  }

  @property --overflow-y {
    syntax: "*"; inherits: false; initial-value: visible;
  }

  @property --skew-x {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --border-left-color {
    syntax: "<color>"; inherits: false; initial-value: currentColor;
  }

  @property --ring-color {
    syntax: "<color>"; inherits: false; initial-value: #3b82f6;
  }

  @property --scroll-padding {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --brand-hue {
    syntax: "<angle>"; inherits: false; initial-value: 0deg;
  }

  @property --mask-image {
    syntax: "<mask-source>"; inherits: false; initial-value: none;
  }

  @property --backdrop-brightness {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --touch-action {
    syntax: "*"; inherits: false; initial-value: auto;
  }

  @property --mask-position {
    syntax: "<position>"; inherits: false; initial-value: 0% 0%;
  }

  @property --backdrop-invert {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --inset-inline {
    syntax: "<length-percentage>"; inherits: false; initial-value: 0;
  }

  @property --scale-x {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --sepia {
    syntax: "<number>"; inherits: false; initial-value: 0;
  }

  @property --scroll-margin-block {
    syntax: "<length>"; inherits: false; initial-value: 0px;
  }

  @property --caption-side {
    syntax: "*"; inherits: true; initial-value: top;
  }

  @property --object-position {
    syntax: "<position>"; inherits: false; initial-value: 50% 50%;
  }

  @property --easing-fn {
    syntax: "*"; inherits: false; initial-value: cubic-bezier(.4, 0, .2, 1) ;
  }

  @property --border-bottom-color {
    syntax: "<color>"; inherits: false; initial-value: currentColor;
  }

  @property --backdrop-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --text-decoration-color {
    syntax: "<color>"; inherits: true; initial-value: currentColor;
  }

  @property --ring-inset {
    syntax: "*"; inherits: false;
  }

  @property --scale-y {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }

  @property --list-style-image {
    syntax: "<url>"; inherits: true; initial-value: none;
  }

  @property --fill-opacity {
    syntax: "<number>"; inherits: false; initial-value: 1;
  }
}

@layer utilities {
  .customee, .\@customee\(border\ grid\) {
    border-width: 1px;
    display: grid;
  }

  .flex {
    display: flex;
  }

  .text-pink-500 {
    color: var(--color-pink-500);
  }
}
